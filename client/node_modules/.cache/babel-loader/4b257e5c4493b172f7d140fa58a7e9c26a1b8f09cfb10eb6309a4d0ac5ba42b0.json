{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erbli_1rk0yhk\\\\rbac-ui\\\\client\\\\src\\\\pages\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Pie, Bar, Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nconst Graph = () => {\n  _s();\n  const [userData, setUserData] = useState(null); // State for Pie chart (User Roles Distribution)\n  const [roleData, setRoleData] = useState(null); // State for Bar chart (Roles Created)\n  const [statusData, setStatusData] = useState(null); // State for Doughnut chart (Active vs Inactive)\n\n  useEffect(() => {\n    // Fetch user data and calculate role distribution and status\n    axios.get(\"http://localhost:5000/api/users\").then(response => {\n      const users = response.data;\n\n      // Calculate role distribution with \"Other\" grouping\n      const roles = users.reduce((acc, user) => {\n        const roleName = user.role.name; // Assuming 'role' is populated with the role name\n\n        // Group specific roles, others as \"Other\"\n        if ([\"Super-Admin\", \"Admin\", \"User\"].includes(roleName)) {\n          acc[roleName] = (acc[roleName] || 0) + 1;\n        } else {\n          acc[\"Other\"] = (acc[\"Other\"] || 0) + 1; // Add to \"Other\"\n        }\n        return acc;\n      }, {});\n\n      // Define colors for each role, including \"Other\"\n      const roleColors = {\n        \"Super-Admin\": \"#FF6384\",\n        // Red\n        Admin: \"#36A2EB\",\n        // Blue\n        User: \"#FFCE56\",\n        // Yellow\n        Other: \"#808080\" // Grey for Other\n      };\n\n      // Map colors dynamically based on role keys\n      const colors = Object.keys(roles).map(role => roleColors[role] || \"#4BC0C0\");\n\n      // Set Pie chart data\n      setUserData({\n        labels: Object.keys(roles),\n        datasets: [{\n          label: \"Users by Role\",\n          data: Object.values(roles),\n          backgroundColor: colors\n        }]\n      });\n      console.log(\"users\", users);\n\n      // Calculate active/inactive users\n      const status = users.reduce((acc, user) => {\n        if (user.isActive) {\n          acc.active += 1;\n        } else {\n          acc.inactive += 1;\n        }\n        return acc;\n      }, {\n        active: 0,\n        inactive: 0\n      });\n      console.log(\"status\", status);\n\n      // Set Doughnut chart data for Active/Inactive status\n      setStatusData({\n        labels: [\"Active\", \"Inactive\"],\n        datasets: [{\n          label: \"User Status\",\n          data: [status.active, status.inactive],\n          backgroundColor: [\"#4CAF50\", \"#F44336\"] // Green for Active, Red for Inactive\n        }]\n      });\n    }).catch(error => console.error(\"Error fetching users data:\", error));\n\n    // Fetch roles data for the Bar chart\n    axios.get(\"http://localhost:5000/api/roles\").then(response => {\n      const roles = response.data;\n      const roleNames = roles.map(role => role.name);\n      const roleCounts = new Array(roles.length).fill(1); // Use 1 for each role (or replace with actual count logic)\n\n      // Set Bar chart data\n      setRoleData({\n        labels: roleNames,\n        datasets: [{\n          label: \"Roles Created\",\n          data: roleCounts,\n          backgroundColor: \"#36A2EB\",\n          // Blue\n          borderColor: \"#1f7fc7\",\n          borderWidth: 1\n        }]\n      });\n    }).catch(error => console.error(\"Error fetching roles data:\", error));\n  }, []); // Empty dependency array ensures the effect runs only once after initial render\n\n  // Render Pie, Bar, and Doughnut charts\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      width: \"100%\",\n      paddingTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#FFCE56\"\n      },\n      children: \"User Roles Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"80%\",\n        height: \"400px\",\n        marginBottom: \"50px\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: userData ? /*#__PURE__*/_jsxDEV(Pie, {\n        data: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading user data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#FFCE56\"\n      },\n      children: \"Roles Created\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"80%\",\n        height: \"400px\",\n        marginBottom: \"50px\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: roleData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: roleData,\n        options: {\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading role data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#4CAF50\"\n      },\n      children: \"User Status: Active vs Inactive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"80%\",\n        height: \"400px\",\n        marginBottom: \"50px\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: statusData ? /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: statusData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading status data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(Graph, \"j2VdfPSzlEFi23DB6mV8lirLWfM=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useState","axios","Pie","Bar","Doughnut","Chart","ChartJS","ArcElement","Tooltip","Legend","BarElement","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","Graph","_s","userData","setUserData","roleData","setRoleData","statusData","setStatusData","get","then","response","users","data","roles","reduce","acc","user","roleName","role","name","includes","roleColors","Admin","User","Other","colors","Object","keys","map","labels","datasets","label","values","backgroundColor","console","log","status","isActive","active","inactive","catch","error","roleNames","roleCounts","Array","length","fill","borderColor","borderWidth","style","display","flexDirection","alignItems","width","paddingTop","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","height","marginBottom","justifyContent","options","responsive","_c","$RefreshReg$"],"sources":["C:/Users/erbli_1rk0yhk/rbac-ui/client/src/pages/Graph.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Pie, Bar, Doughnut } from \"react-chartjs-2\";\r\nimport {\r\n    Chart as ChartJS,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n} from \"chart.js\";\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale\r\n);\r\n\r\nconst Graph = () => {\r\n    const [userData, setUserData] = useState(null); // State for Pie chart (User Roles Distribution)\r\n    const [roleData, setRoleData] = useState(null); // State for Bar chart (Roles Created)\r\n    const [statusData, setStatusData] = useState(null); // State for Doughnut chart (Active vs Inactive)\r\n\r\n    useEffect(() => {\r\n        // Fetch user data and calculate role distribution and status\r\n        axios\r\n            .get(\"http://localhost:5000/api/users\")\r\n            .then((response) => {\r\n                const users = response.data;\r\n\r\n                // Calculate role distribution with \"Other\" grouping\r\n                const roles = users.reduce((acc, user) => {\r\n                    const roleName = user.role.name; // Assuming 'role' is populated with the role name\r\n\r\n                    // Group specific roles, others as \"Other\"\r\n                    if ([\"Super-Admin\", \"Admin\", \"User\"].includes(roleName)) {\r\n                        acc[roleName] = (acc[roleName] || 0) + 1;\r\n                    } else {\r\n                        acc[\"Other\"] = (acc[\"Other\"] || 0) + 1; // Add to \"Other\"\r\n                    }\r\n                    return acc;\r\n                }, {});\r\n\r\n                // Define colors for each role, including \"Other\"\r\n                const roleColors = {\r\n                    \"Super-Admin\": \"#FF6384\", // Red\r\n                    Admin: \"#36A2EB\", // Blue\r\n                    User: \"#FFCE56\", // Yellow\r\n                    Other: \"#808080\", // Grey for Other\r\n                };\r\n\r\n                // Map colors dynamically based on role keys\r\n                const colors = Object.keys(roles).map(\r\n                    (role) => roleColors[role] || \"#4BC0C0\"\r\n                );\r\n\r\n                // Set Pie chart data\r\n                setUserData({\r\n                    labels: Object.keys(roles),\r\n                    datasets: [\r\n                        {\r\n                            label: \"Users by Role\",\r\n                            data: Object.values(roles),\r\n                            backgroundColor: colors,\r\n                        },\r\n                    ],\r\n                });\r\n\r\n                console.log(\"users\", users)\r\n\r\n                // Calculate active/inactive users\r\n                const status = users.reduce(\r\n                    (acc, user) => {\r\n                        if (user.isActive) {\r\n                            acc.active += 1;\r\n                        } else {\r\n                            acc.inactive += 1;\r\n                        }\r\n                        return acc;\r\n                    },\r\n                    { active: 0, inactive: 0 }\r\n                );\r\n\r\n                console.log(\"status\", status)\r\n\r\n                // Set Doughnut chart data for Active/Inactive status\r\n                setStatusData({\r\n                    labels: [\"Active\", \"Inactive\"],\r\n                    datasets: [\r\n                        {\r\n                            label: \"User Status\",\r\n                            data: [status.active, status.inactive],\r\n                            backgroundColor: [\"#4CAF50\", \"#F44336\"], // Green for Active, Red for Inactive\r\n                        },\r\n                    ],\r\n                });\r\n            })\r\n            .catch((error) =>\r\n                console.error(\"Error fetching users data:\", error)\r\n            );\r\n\r\n        // Fetch roles data for the Bar chart\r\n        axios\r\n            .get(\"http://localhost:5000/api/roles\")\r\n            .then((response) => {\r\n                const roles = response.data;\r\n                const roleNames = roles.map((role) => role.name);\r\n                const roleCounts = new Array(roles.length).fill(1); // Use 1 for each role (or replace with actual count logic)\r\n\r\n                // Set Bar chart data\r\n                setRoleData({\r\n                    labels: roleNames,\r\n                    datasets: [\r\n                        {\r\n                            label: \"Roles Created\",\r\n                            data: roleCounts,\r\n                            backgroundColor: \"#36A2EB\", // Blue\r\n                            borderColor: \"#1f7fc7\",\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                });\r\n            })\r\n            .catch((error) =>\r\n                console.error(\"Error fetching roles data:\", error)\r\n            );\r\n    }, []); // Empty dependency array ensures the effect runs only once after initial render\r\n\r\n    // Render Pie, Bar, and Doughnut charts\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n                paddingTop: \"50px\",\r\n            }}\r\n        >\r\n            <h2 style={{ textAlign: \"center\", color: \"#FFCE56\" }}>\r\n                User Roles Distribution\r\n            </h2>\r\n            <div\r\n                style={{\r\n                    width: \"80%\",\r\n                    height: \"400px\",\r\n                    marginBottom: \"50px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                {userData ? (\r\n                    <Pie data={userData} />\r\n                ) : (\r\n                    <p>Loading user data...</p>\r\n                )}\r\n            </div>\r\n\r\n            <h2 style={{ textAlign: \"center\", color: \"#FFCE56\" }}>\r\n                Roles Created\r\n            </h2>\r\n            <div\r\n                style={{\r\n                    width: \"80%\",\r\n                    height: \"400px\",\r\n                    marginBottom: \"50px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                {roleData ? (\r\n                    <Bar data={roleData} options={{ responsive: true }} />\r\n                ) : (\r\n                    <p>Loading role data...</p>\r\n                )}\r\n            </div>\r\n\r\n            <h2 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>\r\n                User Status: Active vs Inactive\r\n            </h2>\r\n            <div\r\n                style={{\r\n                    width: \"80%\",\r\n                    height: \"400px\",\r\n                    marginBottom: \"50px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                {statusData ? (\r\n                    <Doughnut data={statusData} />\r\n                ) : (\r\n                    <p>Loading status data...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}