{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erbli_1rk0yhk\\\\rbac-ui\\\\client\\\\src\\\\pages\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Pie, Bar, Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nconst Graph = () => {\n  _s();\n  const [userData, setUserData] = useState(null); // State for Pie chart\n  const [roleData, setRoleData] = useState(null); // State for Bar chart\n  const [statusData, setStatusData] = useState(null); // State for Active/Inactive chart\n\n  useEffect(() => {\n    // Fetch user data and calculate role distribution\n    axios.get('http://localhost:5000/api/users').then(response => {\n      const users = response.data;\n\n      // Calculate role distribution with \"Other\" grouping\n      const roles = users.reduce((acc, user) => {\n        const roleName = user.role.name; // Assuming 'role' is populated with the role name\n\n        // Group specific roles, others as \"Other\"\n        if (['Super-Admin', 'Admin', 'User'].includes(roleName)) {\n          acc[roleName] = (acc[roleName] || 0) + 1;\n        } else {\n          acc['Other'] = (acc['Other'] || 0) + 1; // Add to \"Other\"\n        }\n        return acc;\n      }, {});\n\n      // Define colors for each role, including \"Other\"\n      const roleColors = {\n        'Super-Admin': '#FF6384',\n        // Red\n        'Admin': '#36A2EB',\n        // Blue\n        'User': '#FFCE56',\n        // Yellow\n        'Other': '#808080' // Grey for Other\n      };\n\n      // Map colors dynamically based on role keys\n      const colors = Object.keys(roles).map(role => roleColors[role] || '#4BC0C0');\n\n      // Set Pie chart data\n      setUserData({\n        labels: Object.keys(roles),\n        datasets: [{\n          label: 'Users by Role',\n          data: Object.values(roles),\n          backgroundColor: colors\n        }]\n      });\n\n      // Calculate active/inactive users\n      const status = users.reduce((acc, user) => {\n        if (user.isActive) {\n          acc.active += 1;\n        } else {\n          acc.inactive += 1;\n        }\n        return acc;\n      }, {\n        active: 0,\n        inactive: 0\n      });\n\n      // Set data for Active/Inactive chart\n      setStatusData({\n        labels: ['Active', 'Inactive'],\n        datasets: [{\n          label: 'User Status',\n          data: [status.active, status.inactive],\n          backgroundColor: ['#4CAF50', '#F44336'] // Green for Active, Red for Inactive\n        }]\n      });\n    }).catch(error => console.error('Error fetching users data:', error));\n\n    // Fetch roles data for the Bar chart\n    axios.get('http://localhost:5000/api/roles').then(response => {\n      const roles = response.data;\n      const roleNames = roles.map(role => role.name);\n      const roleCounts = new Array(roles.length).fill(1); // Use 1 for each role (or replace with actual count logic)\n\n      // Set Bar chart data\n      setRoleData({\n        labels: roleNames,\n        datasets: [{\n          label: 'Roles Created',\n          data: roleCounts,\n          backgroundColor: '#36A2EB',\n          // Blue\n          borderColor: '#1f7fc7',\n          borderWidth: 1\n        }]\n      });\n    }).catch(error => console.error('Error fetching roles data:', error));\n  }, []);\n\n  // Render Pie, Bar, and Doughnut charts\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%',\n      paddingTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: '#FFCE56'\n      },\n      children: \"User Roles Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        height: '400px',\n        marginBottom: '50px',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: userData ? /*#__PURE__*/_jsxDEV(Pie, {\n        data: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading user data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: '#FFCE56'\n      },\n      children: \"Roles Created\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        height: '400px',\n        marginBottom: '50px',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: roleData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: roleData,\n        options: {\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading role data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 78\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: '#4CAF50'\n      },\n      children: \"User Status: Active vs Inactive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        height: '400px',\n        marginBottom: '50px',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: statusData ? /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: statusData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading status data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"j2VdfPSzlEFi23DB6mV8lirLWfM=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useState","axios","Pie","Bar","Doughnut","Chart","ChartJS","ArcElement","Tooltip","Legend","BarElement","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","Graph","_s","userData","setUserData","roleData","setRoleData","statusData","setStatusData","get","then","response","users","data","roles","reduce","acc","user","roleName","role","name","includes","roleColors","colors","Object","keys","map","labels","datasets","label","values","backgroundColor","status","isActive","active","inactive","catch","error","console","roleNames","roleCounts","Array","length","fill","borderColor","borderWidth","style","display","flexDirection","alignItems","width","paddingTop","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","height","marginBottom","justifyContent","options","responsive","_c","$RefreshReg$"],"sources":["C:/Users/erbli_1rk0yhk/rbac-ui/client/src/pages/Graph.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie, Bar, Doughnut } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\r\n\r\n// Register ChartJS components\r\nChartJS.register(ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\r\n\r\nconst Graph = () => {\r\n  const [userData, setUserData] = useState(null); // State for Pie chart\r\n  const [roleData, setRoleData] = useState(null); // State for Bar chart\r\n  const [statusData, setStatusData] = useState(null); // State for Active/Inactive chart\r\n\r\n  useEffect(() => {\r\n    // Fetch user data and calculate role distribution\r\n    axios.get('http://localhost:5000/api/users')\r\n      .then(response => {\r\n        const users = response.data;\r\n\r\n        // Calculate role distribution with \"Other\" grouping\r\n        const roles = users.reduce((acc, user) => {\r\n          const roleName = user.role.name; // Assuming 'role' is populated with the role name\r\n\r\n          // Group specific roles, others as \"Other\"\r\n          if (['Super-Admin', 'Admin', 'User'].includes(roleName)) {\r\n            acc[roleName] = (acc[roleName] || 0) + 1;\r\n          } else {\r\n            acc['Other'] = (acc['Other'] || 0) + 1; // Add to \"Other\"\r\n          }\r\n          return acc;\r\n        }, {});\r\n\r\n        // Define colors for each role, including \"Other\"\r\n        const roleColors = {\r\n          'Super-Admin': '#FF6384', // Red\r\n          'Admin': '#36A2EB', // Blue\r\n          'User': '#FFCE56', // Yellow\r\n          'Other': '#808080', // Grey for Other\r\n        };\r\n\r\n        // Map colors dynamically based on role keys\r\n        const colors = Object.keys(roles).map(role => roleColors[role] || '#4BC0C0');\r\n\r\n        // Set Pie chart data\r\n        setUserData({\r\n          labels: Object.keys(roles),\r\n          datasets: [\r\n            {\r\n              label: 'Users by Role',\r\n              data: Object.values(roles),\r\n              backgroundColor: colors,\r\n            },\r\n          ],\r\n        });\r\n\r\n        // Calculate active/inactive users\r\n        const status = users.reduce(\r\n          (acc, user) => {\r\n            if (user.isActive) {\r\n              acc.active += 1;\r\n            } else {\r\n              acc.inactive += 1;\r\n            }\r\n            return acc;\r\n          },\r\n          { active: 0, inactive: 0 }\r\n        );\r\n\r\n        // Set data for Active/Inactive chart\r\n        setStatusData({\r\n          labels: ['Active', 'Inactive'],\r\n          datasets: [\r\n            {\r\n              label: 'User Status',\r\n              data: [status.active, status.inactive],\r\n              backgroundColor: ['#4CAF50', '#F44336'], // Green for Active, Red for Inactive\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch(error => console.error('Error fetching users data:', error));\r\n\r\n    // Fetch roles data for the Bar chart\r\n    axios.get('http://localhost:5000/api/roles')\r\n      .then(response => {\r\n        const roles = response.data;\r\n        const roleNames = roles.map(role => role.name);\r\n        const roleCounts = new Array(roles.length).fill(1); // Use 1 for each role (or replace with actual count logic)\r\n\r\n        // Set Bar chart data\r\n        setRoleData({\r\n          labels: roleNames,\r\n          datasets: [\r\n            {\r\n              label: 'Roles Created',\r\n              data: roleCounts,\r\n              backgroundColor: '#36A2EB', // Blue\r\n              borderColor: '#1f7fc7',\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch(error => console.error('Error fetching roles data:', error));\r\n  }, []);\r\n\r\n  // Render Pie, Bar, and Doughnut charts\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', paddingTop: '50px' }}>\r\n      <h2 style={{ textAlign: 'center', color: '#FFCE56' }}>User Roles Distribution</h2>\r\n      <div style={{ width: '80%', height: '400px', marginBottom: '50px', display: 'flex', justifyContent: 'center' }}>\r\n        {userData ? <Pie data={userData} /> : <p>Loading user data...</p>}\r\n      </div>\r\n\r\n      <h2 style={{ textAlign: 'center', color: '#FFCE56' }}>Roles Created</h2>\r\n      <div style={{ width: '80%', height: '400px', marginBottom: '50px', display: 'flex', justifyContent: 'center' }}>\r\n        {roleData ? <Bar data={roleData} options={{ responsive: true }} /> : <p>Loading role data...</p>}\r\n      </div>\r\n\r\n      <h2 style={{ textAlign: 'center', color: '#4CAF50' }}>User Status: Active vs Inactive</h2>\r\n      <div style={{ width: '80%', height: '400px', marginBottom: '50px', display: 'flex', justifyContent: 'center' }}>\r\n        {statusData ? <Doughnut data={statusData} /> : <p>Loading status data...</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}